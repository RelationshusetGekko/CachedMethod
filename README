CachedMethod
============

This plugin allows caching of the return value of instance methods on models. It is ment to be used for heavy tasks like statistics generation and the likes.

To cache a method call the cache_method class method with the name of the method to be cached and set :expires_after.

:expire_after defines the time after which the cache item becomes stale, meaning it will be updated on the next call to the method. Also it will be removed from the database if the cache:cleanup task is run.

Installation
============

You will need a table for holding the caches. Until I get around to creating a migration generator you need to create it manually like this:

class CreateCachedMethodItems < ActiveRecord::Migration
  def self.up
    create_table :cached_method_items do |t|
      t.string :key
      t.text :value
      t.datetime :expires_at
      t.timestamps
    end
    
    add_index :cached_method_items, :key, :unique => true
  end

  def self.down
    remove_index :cached_method_items, :key
    drop_table :cached_method_items
  end
end


Example
=======

class Account < ActiveRecord::Base

  def some_heavy_operation(from, to)
    ...
  end

  # This will expire the item in 1 month keeping it updated every hour
  cache_method :some_heavy_operation, :expires_after => 1.month

end

Copyright (c) 2008 Circle R&D

 Permission is hereby granted, free of charge, to any person
 obtaining a copy of this software and associated documentation
 files (the "Software"), to deal in the Software without
 restriction, including without limitation the rights to use,
 copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the
 Software is furnished to do so, subject to the following
 conditions:

 The above copyright notice and this permission notice shall be
 included in all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 OTHER DEALINGS IN THE SOFTWARE.

